Getting Started
Introduction:
- Information Seceurity(infosec) ist ein weiter Feld
- Infosec ist die Praxis Daten zu schuetzen
- Die 3 Element sind Confidentiality, Integrity und Availability (CIA Triad)

- Risk Management Process:
    - Der Datenschutz muss sich auf eine effektive Umsetzung einer Richtlinie konzentrieren, ohne die Geschaeftsablaeufe zu beeintraechtigen
    - Dieser Prozess umfasst 5 Schritte:
        - Indetifying the Risk: Identifiziert Risiken im Unternehmen wie legale, Umwelt, Markt, Regulatoren und andere Risiken
        - Analyze the Risk: Analyse der Risiken, um deren Auswirkungen und Wahrscheinlichkeit zu bestimmen
        - Evaluate the Risk: Risiken bewerten, einstufen und priosieren
        - Dealing with Risk: Risiken so gut wie moeglich beseitigen oder eindaemmen
        - Monitoring Risk: Risiken muessen staendig ueberwacht werden

- Read Team vs. Blue Team:
    - Red Team = Angreifer
    - Blue Team = Verteidiger

###################################################################################################
Setup
1. Getting Started with a Pentest Distro:
    - OVA ist eine pre-build virtuelle Anwendung welches eine OVF XML Datei enthaelt die VM Hardware Eintellung und eine VMDK Datei welches das installierte Betriebssystem ist
    - OVA ist ein Betriebssystem mit vorinstallierten Anwendungen

2. Staying Organized:
- Es ist wichtig, von Anfang an auf eine klare und genaue Dokumentation zu achten

- Folder Structure:
    - Wenn wir eine einzelne Box, ein Labor oder eine Client-Umgebung angreifen, sollten wir eine klare Ordnerstruktur auf unserem Angriffsrechner haben
    - Informationen die wird speichern muessen koennen Scoping-Informationen, Aufzählungsdaten, Beweise für Ausbeutungsversuche, sensible Daten wie Anmeldeinformationen und andere Daten sein

3. Connecting Using VPN:
- Ein virtual private network (VPN) erlaubt sich mit einem private(internal) network zu verbinden und die Ressourcen 

- Einloggen in den HTB Server
- sudo openvpn <VpnFile.ovpn>
- 
###################################################################################################
Pentesting Basics
1. Common Terms:
- What is a Shell?:
    - Shell ist ein Programm, welches Input vom User in Befehle fuer das Betriebssystem umwandelt
    - Shell Programme sind Bash, Zsh, Tcsh, Ksh, Fish Shell
    - Es gibt 3 Arten von Shell Verbindungen:
        - Reverse Shell: Initiert eine Verbindung zu einem Zuhoerer
        - Bind Shell: Bindet die Shell an einen bestimmten Port und wartet auf eine Verbindung
        - Web Shell: Fuehrt Betriebssysteme Befehle ueber den Browser aus

- Port:
    - Ein Port kann mit einem Fenster oder einer Tuer in ein Haus verglichen werden
    - Es gibt eine Liste von standardisierten Ports(https://web.mit.edu/rhel-doc/4/RH-DOCS/rhel-sg-en-4/ch-ports.html):
        - HTTP 80
        - HTTPS 443
        - FTP 21
        - Kerberos 88
        - SMB 445

    - Es gibt 2 Arten von Ports TransmissionControlProtocol(TCP) und UserDatagramProtocol(UDP) Ports: 
        - TCP: Eine Verbindung muss etabliert werden bevor Daten gesendet werden koennen.
        - UDP: Ist ein verbindsloses Modell. Es erfordert kein Handshake. Es gibt keine Garantie, dass die Daten angekommen sind

- Web Server:
    - Ein Webserver ist eine Anwendung, die auf dem Back-End-Server läuft und den gesamten HTTP-Verkehr vom Browser auf der Client-Seite verarbeitet
    - Web-Server laufen meistens auf den TCP Ports 80 und 443
    - Die meisten Schwachstellen von Web-Servern sind hier aufgezaehlt: https://owasp.org/www-project-top-ten/

2. Basic Tools
- Tools sie SSH, NETCAT, TMUX und VIM are essentiell und werden meistens taeglich benutzt
- SSH:
    - Secure Shell(SSH) ist ein Netzwerk Protokoll und laeuft auf Port 22
    - Bietet Benutzer wie Admins eine sichere Moeglichkeit um sich aus der Ferne auf einem Computer einzugreifen
    - SSH Login ist SSH Username@RemoteServer

- Netcat:
    - Netcat, ncat oder nc ist ein hervorragendes Netzwerkprogramm fuer die Interaktion mit TCP/UDP Ports
    - Identifiziert Anwendung die auf Port 22 laeuft : netcat 10.10.10.10 22
    - Die Primaerverwendung fuer Netcat ist fuer die Verbindung zu shells
    - Netcat kann allen Ports zuhoeren und mit denen interagieren
    - Die Windows Alternative ist PowerCat
    - Eine andere Anwendung ist socat, hiermit koennen Ports weitergeleitet werden

- Tmux:
    - Terminal-Multiplexer wie tmux sind gute Anwendungen um das Standard Terminal zu erweitern
    - Hiermit koennen mehrere Fenster in einem Terminal geoffnet werden
    - CNTRL+B = Prefix
    - Prefix + C = Neues Fenster
    - Prefix + % = Teile Fenster
    - https://tmuxcheatsheet.com/

3. Service Scanning:
- Das erste was gemacht wird, ist das Identifizieren des Betriebssystems und die Services die laufen
- Ein Service ist eine Anwendung die auf dem PC ausgefuehrt wird
- Services die nicht korrekt konfiguriert sind oder die Schwachstellen haben sind interessant
- Computer bekommen eine IP-Adresse zugewiesen, welches erlaubt den PC eindeutig zu identifizieren
- Jeder Service bekommt einen Port zugewiesen
- Die Ports 1 bis 1023 sind fuer standard Services zugewiesen
- Nmap ist der Network Mapper der auf allen Ports zuhoert

- Nmap:
    - nmap IP_Adresse
    - Nmap scannt standardmaessig nur die gaengisten 1000 Ports und das nur fuer TCP
    - Mit dem -sC Parameter werden mehr Informationen ausgegeben fuer jeden Port aus
    - Mit dem -sV Parameter zeigt die Version von dem Service pro Port an
    - Mit dem -p Parameter werden alle 65535 TCP gescannt
    - Mit -p<PORT> wird nur ein Port ausgegeben

    - Nmap Scripts:
        - Wenn beispielsweise ein Citrix System geprueft werden soll werden eigens fuer citrix geschriebene Script fuer Nmap verwendet
        - "locate scripts/citrix" sucht alle Scripts fuer Nmap fuer citrix
        - nmap --scripts <script name> -port<port> <host>.Nmap

- Attacking Network Services:
- Banner Grabbing:
    - Oft will sich ein Service mit einem Banner bei dem Client identifizieren
    - Nmap wird sich den Banner holen mit dem Parameter -sV
    - Mit Nmap -sV --script=banner <target> wird Nmap sich den Banner holen
    - Der Banner kann auch manuell mit Netcat geholt werden
    - Mit "nc -nv 10.129.42.253 21" wird die Version von vsFTPD angezeigt
    - Das kann auch fuer mit Nmap automatisiert werden: "nmap -sV --script=banner -p21 <IP/24>"

- FTP:
    - FTP ist ein Standardprotokoll und kann oft interassante Daten beinhalten
    - Mit ftp -p <IP_ADRESSE> kann der FTP Server erreicht werden
    - FTP erlaubt Befehle wie ls, cd, get, usw

- SMB:
    - Server Message Block(SMB) ist ein gaengiges Protokoll, was fuer Druckerfreigaben, File Shares usw zustaendig
    - Manche SMB Versionen sind verwundbar durch Schwachstellen wie EternalBlue
    - Es ist sehr wichtig potenzielle Angriffsflaechen aufzuzaehlen
    - Nmap hat viele Script fuer das Aufzaehlung von SMB Modulen
    - Ein solcher Befehl wuerde wie folgt aussehen:
    - nmap --script smb-os-discovery.nse -p445 <IP_Adresse>

- Shares:
    - SMB erlaubt Usern und Admins eine Verzeichnis zu teilen und macht sie remote zugaenglic
    - Ein Tool um mit SMB Shares interargieren kann ist smbclient
    - Der -L Parameter gibt eine Liste and vorhandenen Shares an
    - Der -N Parameter unterbricht die Passwort abfrage
    - Beispiel Befehl: smbclient -N -L \\\\IP\\Verzeichnis
    - Beispiel Befehl mit User bob: smbclient -U bob \\\\10.129.42.253\\users

- SNMP:
    - Stellt Informationen und Statistiken ueber Router und andere Geraete zur Verfuegung
    - In SNMP Version 1 und 2c kann der Zugang ueber einen Klartext kontrolliert werden
    - Verschluesselung wurde erst in Version 3 eingefuehrt

4. Web Enumneration
- Die groesste Angriffsflaeche bieten Web-Server auf Port 80/443
- Enumarate heisst Einstiegspunkte zu identifizieren

- Gobuster:
    - Nachdem eine Web-Anwendung entdeckt worden ist, lohnt es sich zu pruefen ob versteckte Dateien oder Verzeichnisse vorhanden sind
    - Tools wie ffuf oder GoBuster suchen nach versteckten Verzeichnissen/Dateien
    - Beispiel
    - gobuster dir -u TARGET -w /usr/share/dirb/wordlists/common.txt
    - 

- Directory/File Enumeration:
    - GoBuster ist ein Tool fuer DNS,vhost und Verzeichnis Brute-Forcing
    - Ausserdem kann dadurch AWS S3 Buckets durchsucht werden
    - mit gobuster dir -u LINK_TO_WEB_SERVER -w _WORDLIST werden die bekanntesten Serverdateien geprueft

- DNS Subdomain Enumeration:
    - Mit GoBuster koennen wir uns auch andere verfuegbare Subdomainen holen
    - Fuzzing ist sendet Zufallsdaten an die Schnittstelle weil die meisten Anwendungen nicht fuer beliebige Eingangsdaten ausgelegt sind
    - https://github.com/danielmiessler/SecLists enthaelt viele Listen fuer Fuzzing/Exploitation
    - sudo apt install seclists -y

- Banner Grabbing / Web Server Headers:
    - Mit curl koennen die Server Header Informations abgerufen werden
    - Mit dem Parameter -I wird nur der Header zueruckgegeben
    - Mit dem Parameter -L sorgt dafuer, dass wenn die angefragt Seite bewegt wurde wird der Befehl fuer nochmal ausgefuehrt nochmal fuer die neue URL
    - Das Tool EyeWitness nimmt Screenshots von einer Website auf und gibt einem Header Informationen ueber den Server und idetnfiziert Default Credentials

- Whatweb:
    - Die Version des Webeservers, der unterstuetzte Frameworks und der Anwendungen mit whatweb extrahieren

- Certificates:
    - DIE SSL/TLS Zertifikate enthalten viele Informationen wenn HTTPS benutzt wurde
    - Mit https://IP

- Robots.txt
    - Die meisten Websiten erhalten eine Robot.txt Datei
    - Die Datei sagt Crawlers wie Googlebot welche Ressourcen fuer die Identifizierung aufgerufen werden soll

- Source Code
    - Der Souce Code (CTRL + U) kann wichtige Informationen ueber den Server enthalten

5. Public Exploits:
- Wenn der Service fuer jeden Port bekannt ist koennen nach public exploits gesucht werden

- Finding Pulbic Exploits:
    - Ueber Google lassen sich exploits suchen
    - Mit dem Tool searchsploit kann nach oeffentlich zugaenglichen exploits gesucht werden
    - Befehl "searchsploit Anwendung Version"

- Metasploit Primer:
    - Das Tool Metasploit Framework(MSF) macht die Benutzung von exploits einfacher
    - Mit dem Befehl wird MSF aufgerufen msfconsole
    - MSF hat viele Features wie:
        - Laeuft Aufklaerung Scripts um Einstiespunkte auf dem Host zu identifizieren und das Ziel zu komprimitieren
        - Um zu ueberpruefen ob auf einem Ziel eine Schwachstelle vorhanden ist 
        - Meterpeter um auf eien Shell zuzugreifen
        - post-exploitation und pivoting tools

    - Mit dem Befehl "search exploit EXPLOITNAME" kann nach Expoloits gesucht werden
    - Mit USE EXPLOIT_NAME wird der Exploit genutzt
    - Bevor der exploit ausgefuehrt werden kann muessen die Exploits konfiguriert werden
    - Mit dem Befehl "show options" koennen alle Optionen fuer den Exploit angezeigt werden
    - Jede Option bei der Yes steht muss konfiguriert werden
    - Mit "SET" kann Optionen gesetzt werden
    - Mit "CHECK" kann ueberprueft werden ob ein Exploit gestartet werden kann
    - Mit "exploit" wird der exploit gestartet

6. Types of Shells
- Um das System zu enumerieren beoetigen wir eine Shell wie Bash, PowerShell um das System zu inspizieren
- Ein Weg sich in das System einzuloggen ist SSH(Linux) oder WinRM(Windows)
- Andere Wege um auf einen Host zuzugreifen ist mit verschiedenen Shells:
    - Reverse Shell, Bind Shell, Web Shell

- Reverse Shell:
    - Ist die beliebteste Methode um Kontrolle ueber einen kompromitierten Host zu bekommen
    - Wenn eine Schwachstelle mit Remote Code Execution gefunden worden ist kann ein Listener wie netcat gestartet werden

    - Netcat Listener:
        - Parameter -l wartet auf eine Verbindung
        - Parameter -v wann die Verbindung eine Nachricht bekommt
        - Parameter -n Verbindet nur von IP zu IP um Verbindung schneller zu machen
        - Parameter -p PORT Port auf der netcat zuhoert

    - Connect Back IP:
        - Um dem System eine Nachricht zu senden muessen wir die IP finden
        - "ip a" wird die IP ausgegeben

    - Reverse Shell Command:
        - https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md
        - Der Link hat eine Liste von Reverse Shell Commands 

- Bind Shell:
    - Ein anderer Typ ist Bind Shell anderes als bei der Reverse Shell muss sich der Angreifer mit dem Ziel verbinden
    - Wir koennen https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Bind%20Shell%20Cheatsheet.md nutzen um den Befehl fuer die Bind Shell finden

- Web Shell:
    - Web Shell ist ein Web Script wie PHP oder ASPX welches Befehle ueber ein HTTP Anfrage via GET oder POST akzeptiert

    - Writing a Web Shell:
        - Ein Web Shell Sript ist meistens ein One Liner
        - Beispiel: "<?php system($_REQUEST["cmd"]); ?>"
    
    - Uploading a Web Shell:
        - Wenn wir eine Web Shell haben, muss das Web Shell Script in den Remote Host Web Directory hochgeladen werden und darin ausgefuehrt werden
        - Web Server : Default Webroot
            - Apache : /var/www/html/
            - Nginx : /usr/local/nginx/html/
            - IIS : c:\inetpub\wwwroot\
            - XAMPP : C:\xampp\htdocs\

    - Accessing Web Shell:
        - Auf eine Web Shell kann durch den Browser oder mit curl zugegriffen werden

7. Prvilege Escalation:
- Meistens ist der erste Zugang ein low-privileged User
- Um vollen Zugang zu bekommen und root zu werden muss eine Prvilege Escalation vorgenommen werden um mehr Rechte zu bekommen

- PrivEsc Checklists:
    - Wenn der erste Zugang zum ersten Host gelingt sollte eine Checkliste durchgegangen werden um alle Sicherheitsluecken zu checken
    - Moegliche Checklisten:
    - https://github.com/swisskyrepo/PayloadsAllTheThings
        - https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-%20Privilege%20Escalation.md
        - https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md
    - https://book.hacktricks.xyz/welcome/readme
        - https://book.hacktricks.xyz/linux-hardening/linux-privilege-escalation-checklist
        - https://book.hacktricks.xyz/windows-hardening/checklist-windows-privilege-escalation

- Enumeration Scripts:
    - Viele Enumeration Scripts werden von anti-virus software entdeckt werden
    - Die Script koennen automatisch ausgefuehrt werden um eine Suche von Schwachstellen rauszufinden
    - Ein anderes Tool fuer Server Enumeration ist PEASS (https://github.com/carlospolop/PEASS-ng)
    - Beispiel: ./linpeas.sh und dann checkliste eingeben

- Kernel Exploits:
    - Wenn auf einem Server ein altes Betriebssystem laueft sollte nach potentiellen Kernel Schwachstellen gesucht werden

- Vulnerable Software:
    - Wir koenen fuer installierte Software suchen um nach public exploits zu suchen
    - In Linux sucht man mit dpkg -l Befehl
    - In Windows sucht man in C:\Program Files nach installierten Software

- User Privileges:
    - Manchen Usern koennen die Rechte fuer die Ausfuehreung von Programmen mit sudo gegeben werden
    - Sudo wird benutzt um Befehle als ein anderer Nutzer auszufuehren
    - Mit sudo -l kann ueberprueft werden welche sudo Priviligen ein User hat
    - https://gtfobins.github.io/ beinhaltet eine Liste von Befehlen die exploited werden koennen
    - https://lolbas-project.github.io/# enthaelt auch fuer Windows eine Liste von Anwendung mit denen sich extra Rechte gegeben werden koennen

- Scheduled Tasks:
    - Die meisten Anwendungen laufen in einem Intervall
    - Anti-Virus Scans laufen jede Stunde/30 Minuten
    - In Windows heissen die Anwendungen scheduled Tasks in Linux heissen diese Anwendungen cron jobs
    - Es gibt 2 Wege das zu umgehen:
        - Neue scheduled tasks/cron jobs anlegen
        - Reinzulegen malicious software auszufuehren
    - Um Cron Jobs hinzuzufuegen gibt es spezifische Verzeichnisse um den Job einzutragen dazu gehoeren:
        - /etc/crontab
        - /etc/cron.d
        - /var/spool/cron/crontabs/root

- Exposed Credentials:
    - Configurations, Log, User und Historydateien enthalten oft Credentials
    - Die Enumerations Scripts durchsuchen diese Dateien oft nach solchen Sachen

- SSH Keys:
    - Im .ssh Verzichnis sind eventuell fuer jeden User private ssh keys enthalten
    - /home/user/.ssh/id_rsa oder /root/.ssh/id_rsa enthalten private SSH Keys
    - Wenn wir Zugriff auf das /root/.ssh/ Verzeichnis haben koennen wir die id_rsa Datei lesen und uns in eine andere Maschine einloggen
    - Wenn Schreibrechte fuer den Ordner /.ssh/ Verzeichnis vorhanden sind kann ein Public Key in dem Verzeichnis erzeugt werden
    - Diese Technik gibt Zugang zu SSH nachdem eine Shell als ein User vorhanden sind
    - Mit ssh-keygen -f key wird ein SSH Key generiert mit -f wird die Ausgabedatei spezifiziert
    - Das gibt einem key und key.pub Dateien, die Datei key.pub wird auf die remote Machine kopiert
    - Die key.pub wird auf die remote Machine kopiert und in das Verzeichnis /root/.ssh/authorizes_keys geschoben

8. Transferring Files
- Waehrend einem Penetrationtest ist es wahrscheinlich, dass Dateien transferiert werden muessen
- Tools wie Metasploit mit Meterpreter Shell erlauben uns das hochladen von Dateien aber nicht das runterladen von Dateien

- Using wget:
    - Eine Methode ist ein Python HTTP Server einzurichten udn mit wget oder curl die Dateien runterzuladen
    - Zuerste wechselen wir in das Verzeichnis indem die Datei liegt die wir transferieren wollen
    - Dann starten wir in diesem Verzeichnis ein HTTP Server mit python3 -m http.server 8000

- Using SCP:
    - SCP kann auch benutzt werden wenn SSH User Credentials auf dem Remote Host vorhanden sind
    - scp DATEI USER@REMOTEHOST:/Verzeichnis kopiert Datei auf das Zielsystem

- Using Base64:
    - Mit Base64 koennen Dateien encodet werden in das Base64 Format, den Base64 String koennen wir auf das Zielsystem kopieren und dort wieder decoden
    - Wenn ein binaer Datei namens shell kopiert werden soll "base64 shell -w 0"
    - Jetzt kopieren den Ausgabecode auf den Remote Host und dekodieren in da mit "base64 -d"

- Validating File Transfers:
    - Um das Format einer Datei zu validieren koennen wir den Befehl file verwenden
    - Um den md5 Hash zu ermitteln verwenden wir den md5sum Befehl

###################################################################################################
Getting Started with Hack The Box (HTB)
1. Starting Out:
- Vulnerable Machines/Applications:
    - Es gibt viele Ressourcen mit denen Web und Netzwerk Schwachstellen in einem sicheren Umfeld testen kann
    - Hier sind ein paar Lab Enviroment Beispiele:
        - OWASP Juice Shop(https://owasp.org/www-project-juice-shop/)
        - Metasploitable 2(https://docs.rapid7.com/metasploit/metasploitable-2-exploitability-guide/)
        - Metasploitable 3(https://github.com/rapid7/metasploitable3)
        - DVWA(https://github.com/digininja/DVWA)

    - Beginner Friendly HTB Machines:
        - Lame
        - Blue
        - Nibbles
        - Shocker
        - Jerry

    - Beginner Friendly HTB Challenges:
        - Find The Easy Pass
        - Weak RSA
        - You know 0xDiablos

    - Dante Prolab:
        - Ist ein Pro Lab auf der HTB Plattform indem Netzwerkskills verbessert werden koennen

2. Navigating HTB:
- Tracks:
    - HTB Tracks sind ein gutes Feature welches die neachste Maschine und Challenges empfielt
    - Track enthalten viele Maschinen und Challenges fuer ein bestimmtes Thema

###################################################################################################
Attacking Your First Box
1. Nibbles - Enumeration
- Die HTB Box Linux Nibbles die als easy eingestuft worden ist
-  Der erste Schritt ist immer eine Enumeration also eine Aufzaehlung von Enstiegspunkten in das System
- Es gibt 3 verschiedene Arten von Ansaetzen eine Penetrationstest ausgefuehrt wird:
    - Black-Box: Der Angreifer hat kein Wissen vom Ziel. Der Penetrationstester bekommt meistens nur den Firmennamen und muss sich alle weiteren Informationen selbst holen. Diese Art von Herangensweise simuliert meistens einen echten Angriff auf ein Netzwerk
    - Grey-Box: Der Angreifer hat ein paar Informationen ueber das Netzwerk. Dazu gehoert eventuell eine Liste an IP-Adressen/Ranges, Low-level Credentials zu Web-Anwendungen oder Active Directory oder andere Anwendungen/Netzwerkdiagramme. Der Angriff simuliert einen Angriff aus dem inneren einer Firma oder von einem Angreifer mit low level Access
    - White-Box: In diesem Typ von Test wird dem Angreifer kompletten Zugriff auf das System gegeben. In einem Test fuer eine Web-Anwendung werden eventuell Admin-Level Credentials gegeben.

- Nmap:
    - Mit Nmap koennen nach offenen Ports gesucht werden
    - Mit dem Parameter -oA wird die Ausgabe in einem XML-Format ausgegeben dafuer muss eine Ausgabedatei definiert werden
    - Mit dem Parameter -p- werden alle Ports gescannt
    - Mit dem Parameter -sC wird ein Defaultscript ausgefuehrt
    - Nmap dauert meistens etwas laenger waehrenddessen koennen wir den nc Befehl ausfuehren
    - Der Befehl Nc gibt den Banner fuer jeden Port aus

2. Nibbles - Web Footprinting
- Der Befehl whatweb wird benutzt um die Web Anwendung auf einem Server zu identifizieren
- Wir koennen den Inhalt mit curl "URL" checken
- Mit dem Befehl gobuster koennen wir ueberpruefen welche Verzeichniss und Dateien in der Website vorhanden sind

- Vorgangsweise:
    - Nmap alle offenen Ports angeschaut
    - Eine Instanz von Nibbleblog gefunden
    - Nibbleblog mit whatweb analysiert 
    - Admin.php Page gefunden
    - Directory auflisten entdeckt und nachgeschaut
    - Sichergestellt, dass admin ein valieder Username ist
    - Herausgefunden das IP Blacklisting brute-force verbietet
    - Aufgedeckt das nibbles ein moegliches Passwort sein kann

3. Nibbles - Initial Foothold
- Jetzt sind wir im Admin Portal angemeldet, jetzt muss ein Weg gefunden werden um eine Schwachstelle fuer Remote Code Execution zu finden
- Wir koennen die Plugins nach XSS(Cross-Site-Scripting) Schwachstellen suchen
- Dann mit PayloadAllTheThings und HighOn,Coffee ein Reverse Script schreiben
- Ein netcat Listener wird gestartet um auf die Revers Shell zuhoeren
- Die Reverse Shell muss in eine TTY geupgraded werden
- Mit Python sollte ein one-liner genuegen um ein pseudo Terminal zu erzeugen


4. Nibbles - Privilege Escalation
5. Nibbles - Alternate User Method - Metasploit
- Enumeration
    - Nmap -sV -sC URL
    - gobuster dir -u URL --wordlist /usr/share/dirb/wordlists/common.txt
    - Durch Website gehen nach Dateien gucken die Passwort enthalten
    - In Admin.php einloggen
    - XSS in Plugins ausnutzen
    - Reverse Shell datei schreiben
    - Listener fuer Reverse Shell einrichten
    - Reverse Shell mit Python3 in TTY aendern
    - Privilege Escaltion durchfuehren
    - personal.zip entpacken
    - LinEnum.sh runterladen und dann nach privilege escalation checken
    - monitor.sh ein one liner hinzufuegen und als sudo ausfuehren
    - Listener oeffnen und dann sudo terminal haben

- Metasploit
    - msfconsole
    - search nibbleblog
    - configure 
    - Exploit 

###################################################################################################
Problem Solving
1. Common Pitfalls:
- Zusammenfasssun von haeufigen Problemen in HTB:

- VPN Issues:
    - sudo openvpn ./htb.ovpn
    - Die Verbindung zum VPN ueberpruefen

- Getting VPN Address:
    - ip -4 a show tun0
    - Gibt die IP-Adresse vom VPN zurueck

- Checking Routing Table:
    - sudo netstat -rn
    - Zeigt die Routingtabelle zum VPN an

- Changing SSH Key and Password:
    - Wenn es zu Problemen mit dem verbinden mit dem SSH kommt sollte der SSH key neu generiert werden
    - ssh-keygen kann den SSH Key neu erzeugen

2. Getting Help:
- Forum:
    - Das Hack The Box Forum ist ein guter Platz um Hilfe zu finden
    - https://forum.hackthebox.com/

- How to ask Questions:
    1. What point of the box/challenge are we stuck at 'i.e., user/root'?
    2. What steps have we taken so far to get to the point we are at?
    3. What step are we failing at, and what have we done to resolve our issue?
    4. Always try to be very specific on what we need help on, rather than asking for general help

###################################################################################################
Next Steps
1. 
- Root Our First Live Box:
    - Erste 5-10 Easy/Medium retired Boxes loesen
    - Die ersten Easy Boxes sollten ohne Walkthrough machbar sein